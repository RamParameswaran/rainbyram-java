/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    id 'java'
}

java {
    sourceCompatibility = 11
    targetCompatibility = 11
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'

    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
    implementation 'com.amazonaws:aws-lambda-java-events:3.11.0'
    implementation 'com.amazonaws:aws-java-sdk-sns:1.11.456'
    runtimeOnly 'com.amazonaws:aws-lambda-java-log4j2:1.5.1'

    implementation group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.0'
    implementation 'com.google.code.gson:gson:2.9.1'

    implementation 'org.glassfish.jersey.core:jersey-common:2.22.2'

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

    // Mockito test mocking library
    testImplementation "org.mockito:mockito-core:+"
}

test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtimeClasspath
    }
}